{"version":3,"file":"static/webpack/static/development/pages/_app.js.b7c1f05f33e02eae1d40.hot-update.js","sources":["webpack:///./sagas/post.js"],"sourcesContent":["import { all, fork, takeLatest, put, delay, call} from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS } from '../reducers/post';\nimport {\n    ADD_COMMENT_FAILURE,\n    ADD_COMMENT_REQUEST,\n    ADD_COMMENT_SUCCESS, LOAD_MAIN_POSTS_FAILURE, LOAD_MAIN_POSTS_REQUEST,\n    LOAD_MAIN_POSTS_SUCCESS,\n} from '../reducers/post';\n/*\n 사가 구성 3종 세트\n api 콜 함수 - 실행(실제 동작) 함수 - watch 함수\n*/\n\naxios.default.baseURL = 'http://localhost:3065/api';\n\nfunction addPostAPI(postData) {\n    console.log('add post api: '+ postData) ; //유저정보 없음\n    return axios.post('//localhost:3065/api/post', postData,{\n        withCredentials: true //로그인한 사람만 작성 가능하므로 쿠키로 인증 필요\n    })\n}\n\nfunction* addPost(action) {\n    try {\n        console.log('add post saga data: '+ action.data.content) ; //유저정보 없음\n        const result = yield call(addPostAPI, action.data);\n        yield put({\n          type: ADD_POST_SUCCESS,\n            data: result.data,\n        });\n    } catch (e) {\n        yield put({\n          type: ADD_POST_FAILURE,\n          error: e,\n        });\n    }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n    console.log('watch add post ') ; //유저정보 없음\n}\n\nfunction addCommentAPI() {\n\n}\n\nfunction* addComment(action) {\n  try {\n    yield delay(2000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: {\n        postId: action.data.postId,\n      },\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: e,\n    });\n  }\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchLoadPosts() {\n    yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n}\nexport default function* postSaga() {\n  yield all([\n    fork(watchAddPost),\n    fork(watchLoadPosts),\n    fork(watchAddComment),\n  ]);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAuBA;;;AAgBA;;;AASA;;;AAiBA;;;AAIA;;;AAGA;AACA;AAzEA;AACA;AACA;AACA;AAMA;;;;;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAGA;AACA;AAJA;AAGA;AAHA;AAIA;AACA;AACA;AAFA;AACA;AALA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAFA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAAA;AAGA;AACA;AACA;AACA;AADA;AAFA;AACA;AAJA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AAFA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}