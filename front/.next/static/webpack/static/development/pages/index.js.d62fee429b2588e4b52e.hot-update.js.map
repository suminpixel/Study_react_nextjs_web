{"version":3,"file":"static/webpack/static/development/pages/index.js.d62fee429b2588e4b52e.hot-update.js","sources":["webpack:///./pages/index.js","webpack:///./reducers/post.js"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\n\n/*\n\n메인페이지\n스토어 스테이트 : 스토어에서 포스트 정보, 유저 정보, 유저 로그인 정보를 가져온다.\n스토어 스테이트에 상태에 따라 포스팅리스트 등을 가져와 뿌린다.\n\n*/\nconst Home = () => {\n\n  //리덕스 스토어 스테이트가 가지고 있는 데이터 소환하여 변수화\n  const { isLoggedIn } = useSelector(state => state.user);\n  const { mainPosts } = useSelector(state => state.post);\n\n  return (\n    <div>\n      {isLoggedIn && <PostForm />}\n      {mainPosts.map((c) => {\n        return (\n          <PostCard key={c} post={c} />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Home;\n","/*\n\ninitialState 란?\n해당 리덕스문서가 사용하는 스테이트 중앙 통제실\n웹을 대표하는 모든 상태값을 가지고 있음\n해당 스테이트 설계가 가장 중요\n\n*/\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '제로초',\n    },\n    content: '첫 번째 게시글',\n    img: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\n    Comments: [],\n  }], // 화면에 보일 포스트들\n  imagePaths: [], // 미리보기 이미지 경로\n  addPostErrorReason: '', // 포스트 업로드 실패 사유\n  isAddingPost: false, // 포스트 업로드 중\n  postAdded: false, // 포스트 업로드 성공\n  isAddingComment: false,\n  addCommentErrorReason: '',\n  commentAdded: false,\n};\n\nconst dummyPost = {\n  id: 2,\n  User: {\n    id: 1,\n    nickname: '제로초',\n  },\n  content: '나는 더미입니다.',\n  Comments: [],\n};\n\nconst dummyComment = {\n  id: 1,\n  User: {\n    id: 1,\n    nickname: '제로초',\n  },\n  createdAt: new Date(),\n  content: '더미 댓글입니다.',\n};\n\nexport const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\nexport const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\nexport const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\n\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\n\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\n\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\n\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\n\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nexport const LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\nexport const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\nexport const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\n\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\n\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST: {\n      return {\n        ...state,\n        isAddingPost: true,\n        addPostErrorReason: '',\n        postAdded: false,\n      };\n    }\n    case ADD_POST_SUCCESS: {\n      return {\n        ...state,\n        isAddingPost: false,\n        mainPosts: [dummyPost, ...state.mainPosts],\n        postAdded: true,\n      };\n    }\n    case ADD_POST_FAILURE: {\n      return {\n        ...state,\n        isAddingPost: false,\n        addPostErrorReason: action.error,\n      };\n    }\n    case ADD_COMMENT_REQUEST: {\n      return {\n        ...state,\n        isAddingComment: true,\n        addCommentErrorReason: '',\n        commentAdded: false,\n      };\n    }\n    case ADD_COMMENT_SUCCESS: {\n      const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n      const post = state.mainPosts[postIndex];\n      const Comments = [...post.Comments, dummyComment];\n      const mainPosts = [...state.mainPosts];\n      mainPosts[postIndex] = { ...post, Comments };\n      return {\n        ...state,\n        isAddingComment: false,\n        mainPosts,\n        commentAdded: true,\n      };\n    }\n    case ADD_COMMENT_FAILURE: {\n      return {\n        ...state,\n        isAddingComment: false,\n        addCommentErrorReason: action.error,\n      };\n    }\n    default: {\n      return {\n        ...state,\n      };\n    }\n  }\n};\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;;;;;;;AAMA;AAEA;AAFA;AAGA;AAAA;AAHA;AACA;AADA;AAIA;AAAA;AAJA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AARA;AASA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAjBA;AAoBA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAPA;AAUA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAGA;AAxDA;AA0DA;;;;A","sourceRoot":""}