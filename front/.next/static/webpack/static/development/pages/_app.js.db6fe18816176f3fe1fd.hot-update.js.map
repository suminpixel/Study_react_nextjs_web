{"version":3,"file":"static/webpack/static/development/pages/_app.js.db6fe18816176f3fe1fd.hot-update.js","sources":["webpack:///./components/LoginForm.js","webpack:///./components/UserProfile.js","webpack:///./pages/_app.js"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport Link from 'next/link';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useInput } from '../pages/signup'; // TODO: util 폴더로 옮기기\nimport { LOG_IN_REQUEST } from '../reducers/user';\n/*\n\n로그인 폼\n스토어 스테이트 : 0\n자체 스테이트 : id, pw, onChangeId, onChangePW\n콜백 함수 : 온서브밋폼\n디스패치 액션 : 로그인액션\n\n\n*/\nconst LoginForm = () => {\n  const [id, onChangeId] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const { isLoggingIn } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n\n  const onSubmitForm = useCallback((e) => {\n    e.preventDefault();\n    dispatch({\n      type: LOG_IN_REQUEST,\n      data: {\n        id, password,\n      },\n    });\n  }, [id, password]);\n\n  return (\n    <Form onSubmit={onSubmitForm} style={{ padding: '10px' }}>\n      <div>\n        <label htmlFor=\"user-id\">아이디</label>\n        <br />\n        <Input name=\"user-id\" value={id} onChange={onChangeId} required />\n      </div>\n      <div>\n        <label htmlFor=\"user-password\">비밀번호</label>\n        <br />\n        <Input name=\"user-password\" value={password} onChange={onChangePassword} type=\"password\" required />\n      </div>\n      <div style={{ marginTop: '10px' }}>\n        <Button type=\"primary\" htmlType=\"submit\" loading={isLoggingIn}>로그인</Button>\n        <Link href=\"/signup\"><a><Button>회원가입</Button></a></Link>\n      </div>\n    </Form>\n  );\n};\n\nexport default LoginForm;\n","import { Avatar, Card, Button } from 'antd';\nimport React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { LOG_OUT_REQUEST } from '../reducers/user';\n/*\n\n유저 프로필 포맷\n스토어 스테이트 : userInfo\n자체 스테이트 : 0\n디스패치 : 로그아웃 액션\n\n*/\nconst UserProfile = () => {\n  const { me } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n\n    //로그아웃버튼 클릭 //다른 컴포넌트에 state 내려보내는것은 무조건 유즈콜백\n  const onLogout = useCallback(() => {\n    dispatch({\n      type: LOG_OUT_REQUEST,\n    });\n  }, []);\n\n  return (\n    <Card\n      actions={[\n        <div key=\"twit\">짹짹<br />{me.Post.length}</div>,\n        <div key=\"following\">팔로잉<br />{me.Followings.length}</div>,\n        <div key=\"follower\">팔로워<br />{me.Followers.length}</div>,\n      ]}\n    >\n      <Card.Meta\n        avatar={<Avatar>{me.nickname[0]}</Avatar>}\n        title={me.nickname}\n      />\n      <Button onClick={onLogout}>로그아웃</Button>\n    </Card>\n  );\n};\n\nexport default UserProfile;\n","import React from 'react';\nimport Head from 'next/head';\nimport PropTypes from 'prop-types';\nimport withRedux from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport AppLayout from '../components/AppLayout';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\n\n/*\n\n_app.js :\n\nnextjs가 가장 처음 뿌려주는 루트 페이지\n스토어 프로바이더 세팅,\n미들웨어 세팅등을 여기서 한다.\n인덱스.js를 뿌려준다.\n\n----모르으면 외워서 쓸것--------\nstore 연결\nmiddleware (rootSaga) 연결 등을 한다.\n-----------------------------\n\n*/\n\nconst NodeBird = ({ Component, store }) => {\n  return (\n    <Provider store={store}>\n      <Head>\n        <title>NodeBird</title>\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.css\" />\n      </Head>\n      <AppLayout>\n        <Component />\n      </AppLayout>\n    </Provider>\n  );\n};\n\nNodeBird.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  store: PropTypes.object.isRequired,\n};\n\nconst configureStore = (initialState, options) => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const enhancer = process.env.NODE_ENV === 'production'\n    ? compose(applyMiddleware(...middlewares))\n    : compose(\n      applyMiddleware(...middlewares),\n      !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\n    );\n  const store = createStore(reducer, initialState, enhancer);\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default withRedux(configureStore)(NodeBird);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;;;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAHA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AADA;AAFA;AAMA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAOA;AAAA;AACA;AAAA;AADA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;AAeA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}