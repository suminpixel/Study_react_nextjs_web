{"version":3,"file":"static/webpack/static/development/pages/_app.js.3dba22a8fe3bbb86bd30.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import React from 'react';\nimport Head from 'next/head';\nimport PropTypes from 'prop-types';\nimport withRedux from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport AppLayout from '../components/AppLayout';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\n\n/*\n\n_app.js :\n\nnextjs가 가장 처음 뿌려주는 루트 페이지\n스토어 프로바이더 세팅,\n미들웨어 세팅등을 여기서 한다.\n인덱스.js를 뿌려준다.\n\n----모르으면 외워서 쓸것--------\nstore 연결\nmiddleware (rootSaga) 연결 등을 한다.\n-----------------------------\n\n*/\n\nconst NodeBird = ({ Component, store }) => {\n  return (\n    <Provider store={store}>\n      <Head>\n        <title>NodeBird</title>\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.css\" />\n      </Head>\n      <AppLayout>\n        <Component />\n      </AppLayout>\n    </Provider>\n  );\n};\n\nNodeBird.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  store: PropTypes.object.isRequired,\n};\n\nconst configureStore = (initialState, options) => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const enhancer = process.env.NODE_ENV === 'production'\n    ? compose(applyMiddleware(...middlewares))\n    : compose(\n      applyMiddleware(...middlewares),\n      !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\n    );\n  const store = createStore(reducer, initialState, enhancer);\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default withRedux(configureStore)(NodeBird);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;AAeA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}