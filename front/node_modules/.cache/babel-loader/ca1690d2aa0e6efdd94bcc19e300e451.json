{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/suminlee/PhpstormProjects/reactSNS/front/pages/signup.js\";\nimport React, { useCallback, useState } from 'react';\nimport AppLayout from \"../components/AppLayout\";\nimport { Input, Button, Form, Checkbox } from 'antd';\nimport Head from \"next/head\";\nimport PropTypes from 'prop-types';\n/*\n\n회원가입 페이지\n\n\n*/\n\n/*\nconst TextInput = ( { value } ) => {\n    return (\n        <div>{value}</div>\n    );\n};\n\n */\n\nTextInput.PropTypes = {\n  value: PropTypes.string\n}; //커스텀 훅 (export : 외부로 보내기)\n//만약 이곳에 값이 전달됬을경우\n\nexport var useInput = function useInput() {\n  var initValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n  //전달된 매개변수를 value, setter로 스테이트 화 시킵니다\n  var _useState = useState(initValue),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setter = _useState2[1]; //핸들러라는 이름의 변수에  setter의 value를 넣습니다.\n\n\n  var handler = useCallback(function (e) {\n    setter(e.target.value);\n  }, []);\n  return [value, handler];\n};\n\nvar Signup = function Signup() {\n  //훅(스테이트 세팅)\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      id = _useState4[0],\n      setId = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nick = _useState6[0],\n      setNick = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      passwordCheck = _useState10[0],\n      setPasswordCheck = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      term = _useState12[0],\n      setTerm = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      passwordError = _useState14[0],\n      setPasswordError = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      termError = _useState16[0],\n      setTermError = _useState16[1]; //이벤트 매서드\n\n\n  var onSubmit = useCallback(function (e) {\n    e.preventDefault(); //실제 제출되지않게\n\n    console.log(\"폼 클릭 이벤트 동작\"); //실제 제출시에는 콘솔로그들 지우기 : 웹팩 콘솔로그 없애기\n    //검증로직\n\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    console.log({\n      id: id,\n      nick: nick,\n      password: password,\n      passwordCheck: passwordCheck,\n      term: term\n    });\n  }, [password, passwordCheck, term]); //입력창이 변경 될 때마다 실행되는 매서드 (스테이트 변경)\n\n  var onChangeId = useCallback(function (e) {\n    setId(e.target.value);\n  }, [id]);\n  var onChangeNick = useCallback(function (e) {\n    setNick(e.target.value);\n  }, [nick]);\n  var onChangePassword = useCallback(function (e) {\n    setPassword(e.target.value);\n  }, [password]);\n  var onChangePasswordCheck = useCallback(function (e) {\n    setPasswordError(e.target.value !== password); // 비번칠때마다 같은지 아닌지 알려주는\n\n    setPasswordCheck(e.target.value);\n  }, [password]);\n  var onChangeTerm = useCallback(function (e) {\n    setTerm(e.target.checked);\n  }, [term]); //랜더링 리턴\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"\\uD68C\\uC6D0\\u3163\\uC785\", React.createElement(Form, {\n    onSubmit: onSubmit,\n    style: {\n      padding: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    value: \"123\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"user-id\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"\\uC544\\uC774\\uB514\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(Input, {\n    name: \"user-id\",\n    value: id,\n    required: true,\n    onChange: onChangeId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"user-nick\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"\\uB2C9\\uB124\\uC784\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(Input, {\n    name: \"user-nick\",\n    value: nick,\n    required: true,\n    onChange: onChangeNick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"user-password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), React.createElement(Input, {\n    name: \"user-password\",\n    value: password,\n    type: \"password\",\n    required: true,\n    onChange: onChangePassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"user-password-check\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC7AC\\uC785\\uB825\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), React.createElement(Input, {\n    name: \"user-password-check\",\n    value: passwordCheck,\n    type: \"password\",\n    required: true,\n    onChange: onChangePasswordCheck,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), passwordError && React.createElement(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \" \\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4. \")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    name: \"user-term\",\n    value: term,\n    onChange: onChangeTerm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"), termError && React.createElement(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \" \\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\")), React.createElement(\"div\", {\n    style: {\n      margin: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\")))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["/Users/suminlee/PhpstormProjects/reactSNS/front/pages/signup.js"],"names":["React","useCallback","useState","AppLayout","Input","Button","Form","Checkbox","Head","PropTypes","TextInput","value","string","useInput","initValue","setter","handler","e","target","Signup","id","setId","nick","setNick","password","setPassword","passwordCheck","setPasswordCheck","term","setTerm","passwordError","setPasswordError","termError","setTermError","onSubmit","preventDefault","console","log","onChangeId","onChangeNick","onChangePassword","onChangePasswordCheck","onChangeTerm","checked","padding","color","margin"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport AppLayout from \"../components/AppLayout\"\nimport {Input, Button, Form, Checkbox} from 'antd';\nimport Head from \"next/head\";\nimport PropTypes from 'prop-types';\n\n/*\n\n회원가입 페이지\n\n\n*/\n/*\nconst TextInput = ( { value } ) => {\n    return (\n        <div>{value}</div>\n    );\n};\n\n */\n\nTextInput.PropTypes = {\n    value : PropTypes.string,\n\n};\n//커스텀 훅 (export : 외부로 보내기)\n//만약 이곳에 값이 전달됬을경우\nexport const useInput = (initValue = null) => {\n    //전달된 매개변수를 value, setter로 스테이트 화 시킵니다\n    const [value, setter] = useState(initValue);\n    //핸들러라는 이름의 변수에  setter의 value를 넣습니다.\n    const handler = useCallback((e) => {\n        setter(e.target.value);\n    },[]);\n    return [value, handler];\n\n};\n\nconst Signup = () => {\n\n    //훅(스테이트 세팅)\n    const [id, setId] = useState('');\n    const [nick, setNick] = useState('');\n    const [password, setPassword] = useState('');\n    const [passwordCheck, setPasswordCheck] = useState('');\n    const [term, setTerm] = useState(false);\n    const [passwordError, setPasswordError] = useState(false);\n    const [termError, setTermError] = useState(false);\n\n\n    //이벤트 매서드\n    const onSubmit = useCallback((e)=>{\n        e.preventDefault();//실제 제출되지않게\n        console.log(\"폼 클릭 이벤트 동작\"); //실제 제출시에는 콘솔로그들 지우기 : 웹팩 콘솔로그 없애기\n        //검증로직\n        if(password !== passwordCheck){\n            return setPasswordError(true);\n        }\n        if(!term){\n            return setTermError(true);\n        }\n        console.log(\n            {\n                id,\n                nick,\n                password,\n                passwordCheck,\n                term\n            }\n        );\n    },[password, passwordCheck, term]);\n\n\n    //입력창이 변경 될 때마다 실행되는 매서드 (스테이트 변경)\n    const onChangeId = useCallback((e) => {\n        setId(e.target.value);\n    },[id]);\n    const onChangeNick = useCallback((e) => {\n        setNick(e.target.value);\n    },[nick]);\n\n    const onChangePassword = useCallback((e) => {\n        setPassword(e.target.value);\n    },[password]);\n    const onChangePasswordCheck = useCallback((e) => {\n        setPasswordError(e.target.value !== password); // 비번칠때마다 같은지 아닌지 알려주는\n        setPasswordCheck(e.target.value);\n    },[password]);\n\n    const onChangeTerm = useCallback((e) => {\n        setTerm(e.target.checked);\n    },[term]);\n\n\n    //랜더링 리턴\n    return(\n        <>\n                <div>\n                    회원ㅣ입\n                    <Form onSubmit={onSubmit} style={{ padding:10 }}>\n                        <TextInput value=\"123\"/>\n                        <div>\n                            <label htmlFor = \"user-id\">아이디</label>\n                            <br />\n                            <Input name=\"user-id\" value={id} required onChange={onChangeId}/>\n                        </div>\n                        <div>\n                            <label htmlFor = \"user-nick\">닉네임</label>\n                            <br />\n                            <Input name=\"user-nick\" value={nick} required onChange={onChangeNick}/>\n                        </div>\n                        <div>\n                            <label htmlFor = \"user-password\">비밀번호</label>\n                            <br />\n                            <Input name=\"user-password\" value={password} type=\"password\"  required onChange={onChangePassword}/>\n                        </div>\n                        <div>\n                            <label htmlFor = \"user-password-check\">비밀번호 재입력</label>\n                            <br />\n                            <Input name=\"user-password-check\" value={passwordCheck} type=\"password\" required onChange={onChangePasswordCheck}/>\n                            {passwordError && <div style={{ color:'red' }}> 비밀번호가 일치하지 않습니다. </div>}\n                        </div>\n                        <div>\n                            <Checkbox name=\"user-term\"  value={term} onChange={onChangeTerm}>\n                                약관에 동의합니다.\n                            </Checkbox>\n                            {termError && <div style={{ color:'red' }}> 약관에 동의하셔야 합니다.</div>}\n                        </div>\n                        <div style={{ margin:10 }}>\n                            <Button type=\"primary\" htmlType=\"submit\">가입하기</Button>\n                        </div>\n                    </Form>\n                </div>\n        </>\n    )\n};\n\nexport default Signup"]},"metadata":{},"sourceType":"module"}