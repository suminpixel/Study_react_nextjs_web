{"ast":null,"code":"var _jsxFileName = \"/Users/suminlee/PhpstormProjects/reactSNS/front/components/UserProfile.js\";\nimport { Avatar, Card, Button } from 'antd';\nimport React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { LOG_OUT_REQUEST } from '../reducers/user';\n/*\n\n유저 프로필 포맷\n스토어 스테이트 : userInfo\n자체 스테이트 : 0\n디스패치 : 로그아웃 액션\n\n*/\n\nvar UserProfile = function UserProfile() {\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var dispatch = useDispatch(); //로그아웃버튼 클릭 //다른 컴포넌트에 state 내려보내는것은 무조건 유즈콜백\n\n  var onLogout = useCallback(function () {\n    dispatch({\n      type: LOG_OUT_REQUEST\n    });\n  }, []);\n  return (//TODO : 유저정보 받은후 다시 넣을것\n    React.createElement(Card, {\n      actions: [],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Card.Meta, {\n      avatar: React.createElement(Avatar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, me.nickname[0]),\n      title: me.nickname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: onLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"\\uB85C\\uADF8\\uC544\\uC6C3\"))\n  );\n};\n\nexport default UserProfile;","map":{"version":3,"sources":["/Users/suminlee/PhpstormProjects/reactSNS/front/components/UserProfile.js"],"names":["Avatar","Card","Button","React","useCallback","useSelector","useDispatch","LOG_OUT_REQUEST","UserProfile","state","user","me","dispatch","onLogout","type","nickname"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,QAAqC,MAArC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA;;;;;;;;;AAQA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,qBACTH,WAAW,CAAC,UAAAI,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CADF;AAAA,MAChBC,EADgB,gBAChBA,EADgB;;AAExB,MAAMC,QAAQ,GAAGN,WAAW,EAA5B,CAFwB,CAItB;;AACF,MAAMO,QAAQ,GAAGT,WAAW,CAAC,YAAM;AACjCQ,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEP;AADC,KAAD,CAAR;AAGD,GAJ2B,EAIzB,EAJyB,CAA5B;AAMA,SACI;AACA,wBAAC,IAAD;AACI,MAAA,OAAO,EAAE,EADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAcA,oBAAC,IAAD,CAAM,IAAN;AACE,MAAA,MAAM,EAAE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASI,EAAE,CAACI,QAAH,CAAY,CAAZ,CAAT,CADV;AAEE,MAAA,KAAK,EAAEJ,EAAE,CAACI,QAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdA,EAkBA,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEF,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAlBA;AAFJ;AAuBD,CAlCD;;AAoCA,eAAeL,WAAf","sourcesContent":["import { Avatar, Card, Button } from 'antd';\nimport React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { LOG_OUT_REQUEST } from '../reducers/user';\n/*\n\n유저 프로필 포맷\n스토어 스테이트 : userInfo\n자체 스테이트 : 0\n디스패치 : 로그아웃 액션\n\n*/\nconst UserProfile = () => {\n  const { me } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n\n    //로그아웃버튼 클릭 //다른 컴포넌트에 state 내려보내는것은 무조건 유즈콜백\n  const onLogout = useCallback(() => {\n    dispatch({\n      type: LOG_OUT_REQUEST,\n    });\n  }, []);\n\n  return (\n      //TODO : 유저정보 받은후 다시 넣을것\n      <Card\n          actions={[]}\n      >\n        {/*\n        <Card\n      actions={[\n        <div key=\"twit\">짹짹<br />{me.Posts.length}</div>,\n        <div key=\"following\">팔로잉<br />{me.Followings.length}</div>,\n        <div key=\"follower\">팔로워<br />{me.Followers.length}</div>,\n      ]}>\n\n\n        */}\n\n      <Card.Meta\n        avatar={<Avatar>{me.nickname[0]}</Avatar>}\n        title={me.nickname}\n      />\n      <Button onClick={onLogout}>로그아웃</Button>\n    </Card>\n  );\n};\n\nexport default UserProfile;\n"]},"metadata":{},"sourceType":"module"}