{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar dummyUser = {\n  nickname: '제로초',\n  Post: [],\n  Followings: [],\n  Followers: [],\n  id: 1\n}; //해당 리덕스문서가 사용하는 스테이\n\nexport var initialState = {\n  isLoggedIn: false,\n  // 로그인 여부\n  isLoggingOut: false,\n  // 로그아웃 시도중\n  isLoggingIn: false,\n  // 로그인 시도중\n  logInErrorReason: '',\n  // 로그인 실패 사유\n  signedUp: false,\n  // 회원가입 성공\n  isSigningUp: false,\n  // 회원가입 시도중\n  signUpErrorReason: '',\n  // 회원가입 실패 사유\n  me: null,\n  // 내 정보\n  followingList: [],\n  // 팔로잉 리스트\n  followerList: [],\n  // 팔로워 리스트\n  userInfo: null // 남의 정보\n\n}; //액션 이름 세팅\n\nexport var LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport var LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport var LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport var LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport var SIGN_UP_REQUSET = 'SIGN_UP_REQUEST';\nexport var SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport var SIGN_UP_FAILURE = 'SIGN_UP_FAILURE'; //리듀서 세\n\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      {\n        //만약 액션타입이 로그인 액션이면...\n        return _objectSpread({}, state, {\n          //다음스테이트를 이렇게 같이 세탕한다. 스프레드 문법 : 새 객체를 새ㅔㅇ성해야 불변성 이전 객체와 차이점을 알 수 있\n          isLoggedIn: true,\n          user: dummyUser,\n          logInErrorReason: '' //user: action.data,\n\n        });\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: false,\n          isLoggedIn: true,\n          me: dummyUser,\n          isLoading: false\n        });\n      }\n\n    case LOG_IN_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: false,\n          isLoggedIn: false,\n          logInErrorReason: action.error,\n          me: null\n        });\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: false,\n          me: null\n        });\n      }\n\n    case SIGN_UP_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: true,\n          isSignedUp: false,\n          signUpErrorReason: ''\n        });\n      }\n\n    case SIGN_UP_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: false,\n          isSignedUp: true\n        });\n      }\n\n    case SIGN_UP_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: false,\n          signUpErrorReason: action.error\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["/Users/suminlee/PhpstormProjects/reactSNS/front/reducers/user.js"],"names":["dummyUser","nickname","Post","Followings","Followers","id","initialState","isLoggedIn","isLoggingOut","isLoggingIn","logInErrorReason","signedUp","isSigningUp","signUpErrorReason","me","followingList","followerList","userInfo","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUSET","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","state","action","type","user","isLoading","error","SIGN_UP_REQUEST","isSignedUp"],"mappings":";AAAA,IAAMA,SAAS,GAAG;AACdC,EAAAA,QAAQ,EAAE,KADI;AAEdC,EAAAA,IAAI,EAAE,EAFQ;AAGdC,EAAAA,UAAU,EAAE,EAHE;AAIdC,EAAAA,SAAS,EAAE,EAJG;AAKdC,EAAAA,EAAE,EAAE;AALU,CAAlB,C,CAOA;;AACA,OAAO,IAAMC,YAAY,GAAG;AACxBC,EAAAA,UAAU,EAAE,KADY;AACL;AACnBC,EAAAA,YAAY,EAAE,KAFU;AAEH;AACrBC,EAAAA,WAAW,EAAE,KAHW;AAGJ;AACpBC,EAAAA,gBAAgB,EAAE,EAJM;AAIF;AACtBC,EAAAA,QAAQ,EAAE,KALc;AAKP;AACjBC,EAAAA,WAAW,EAAE,KANW;AAMJ;AACpBC,EAAAA,iBAAiB,EAAE,EAPK;AAOD;AACvBC,EAAAA,EAAE,EAAE,IARoB;AAQd;AACVC,EAAAA,aAAa,EAAE,EATS;AASL;AACnBC,EAAAA,YAAY,EAAE,EAVU;AAUN;AAClBC,EAAAA,QAAQ,EAAE,IAXc,CAWR;;AAXQ,CAArB,C,CAcP;;AACA,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB,C,CAGP;;AACA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBrB,YAAyB;AAAA,MAAXsB,MAAW;;AAC7C,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKX,cAAL;AAAsB;AAAE;AACpB,iCACOS,KADP;AACc;AACVpB,UAAAA,UAAU,EAAE,IAFhB;AAGIuB,UAAAA,IAAI,EAAE9B,SAHV;AAIIU,UAAAA,gBAAgB,EAAE,EAJtB,CAKI;;AALJ;AAOH;;AACD,SAAKS,cAAL;AAAqB;AACjB,iCACOQ,KADP;AAEIlB,UAAAA,WAAW,EAAE,KAFjB;AAGIF,UAAAA,UAAU,EAAE,IAHhB;AAIIO,UAAAA,EAAE,EAAEd,SAJR;AAKI+B,UAAAA,SAAS,EAAE;AALf;AAOH;;AACD,SAAKX,cAAL;AAAqB;AACjB,iCACOO,KADP;AAEIlB,UAAAA,WAAW,EAAE,KAFjB;AAGIF,UAAAA,UAAU,EAAE,KAHhB;AAIIG,UAAAA,gBAAgB,EAAEkB,MAAM,CAACI,KAJ7B;AAKIlB,UAAAA,EAAE,EAAE;AALR;AAOH;;AACD,SAAKO,eAAL;AAAsB;AAClB,iCACOM,KADP;AAEIpB,UAAAA,UAAU,EAAE,KAFhB;AAGIO,UAAAA,EAAE,EAAE;AAHR;AAKH;;AACD,SAAKmB,eAAL;AAAsB;AAClB,iCACON,KADP;AAEIf,UAAAA,WAAW,EAAE,IAFjB;AAGIsB,UAAAA,UAAU,EAAE,KAHhB;AAIIrB,UAAAA,iBAAiB,EAAE;AAJvB;AAMH;;AACD,SAAKY,eAAL;AAAsB;AAClB,iCACOE,KADP;AAEIf,UAAAA,WAAW,EAAE,KAFjB;AAGIsB,UAAAA,UAAU,EAAE;AAHhB;AAKH;;AACD,SAAKR,eAAL;AAAsB;AAClB,iCACOC,KADP;AAEIf,UAAAA,WAAW,EAAE,KAFjB;AAGIC,UAAAA,iBAAiB,EAAEe,MAAM,CAACI;AAH9B;AAKH;;AACD;AAAS;AACL,iCACOL,KADP;AAGH;AA9DL;AAgEH,CAjED","sourcesContent":["const dummyUser = {\n    nickname: '제로초',\n    Post: [],\n    Followings: [],\n    Followers: [],\n    id: 1,\n};\n//해당 리덕스문서가 사용하는 스테이\nexport const initialState = {\n    isLoggedIn: false, // 로그인 여부\n    isLoggingOut: false, // 로그아웃 시도중\n    isLoggingIn: false, // 로그인 시도중\n    logInErrorReason: '', // 로그인 실패 사유\n    signedUp: false, // 회원가입 성공\n    isSigningUp: false, // 회원가입 시도중\n    signUpErrorReason: '', // 회원가입 실패 사유\n    me: null, // 내 정보\n    followingList: [], // 팔로잉 리스트\n    followerList: [], // 팔로워 리스트\n    userInfo: null, // 남의 정보\n};\n\n//액션 이름 세팅\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\n\nexport const SIGN_UP_REQUSET = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\n\n\n//리듀서 세\nexport default (state = initialState, action) => {\n    switch (action.type) {\n\n        case LOG_IN_REQUEST : { //만약 액션타입이 로그인 액션이면...\n            return{\n                ...state, //다음스테이트를 이렇게 같이 세탕한다. 스프레드 문법 : 새 객체를 새ㅔㅇ성해야 불변성 이전 객체와 차이점을 알 수 있\n                isLoggedIn: true,\n                user: dummyUser,\n                logInErrorReason: '',\n                //user: action.data,\n            }\n        }\n        case LOG_IN_SUCCESS: {\n            return {\n                ...state,\n                isLoggingIn: false,\n                isLoggedIn: true,\n                me: dummyUser,\n                isLoading: false,\n            };\n        }\n        case LOG_IN_FAILURE: {\n            return {\n                ...state,\n                isLoggingIn: false,\n                isLoggedIn: false,\n                logInErrorReason: action.error,\n                me: null,\n            };\n        }\n        case LOG_OUT_REQUEST: {\n            return {\n                ...state,\n                isLoggedIn: false,\n                me: null,\n            };\n        }\n        case SIGN_UP_REQUEST: {\n            return {\n                ...state,\n                isSigningUp: true,\n                isSignedUp: false,\n                signUpErrorReason: '',\n            };\n        }\n        case SIGN_UP_SUCCESS: {\n            return {\n                ...state,\n                isSigningUp: false,\n                isSignedUp: true,\n            };\n        }\n        case SIGN_UP_FAILURE: {\n            return {\n                ...state,\n                isSigningUp: false,\n                signUpErrorReason: action.error,\n            };\n        }\n        default: {\n            return {\n                ...state,\n            };\n        }\n    }\n};"]},"metadata":{},"sourceType":"module"}