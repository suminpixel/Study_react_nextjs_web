{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/suminlee/PhpstormProjects/reactSNS/front/pages/index.js\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(generator);\n\nimport React, { useState, useEffect } from 'react';\nimport { Form, Input, Button, Card, Icon, Avatar } from 'antd';\nimport PostForm from \"../components/PostForm\";\nimport PostCard from \"../components/PostCard\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LOG_IN, logoutAction } from \"../reducers/user\";\n/*\n\n메인페이지\n스토어 스테이트 : 스토어에서 포스트 정보, 유저 정보, 유저 로그인 정보를 가져온다.\n스토어 스테이트에 상태에 따라 포스팅리스트 등을 가져와 뿌린다.\n\n*/\n\nvar Home = function Home() {\n  //리덕스 스테이트가 가지고 있는 데이터 소환하여 state로\n  // const { isLoggedIn } = useSelector(state => state.user.isLoggedIn); -> 잘게 쪼개\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts; //액션을 리덕스 훅스 문법으로 디스팻치하는 방법\n\n\n  var dispatch = useDispatch(); //스테이트 가져옴\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      isLoggedIn = _useSelector2.isLoggedIn,\n      user = _useSelector2.user; //리덕스 스토어 (index.js)전체스테이트에서 유저를 가져와라\n\n\n  console.log(user); //이 페이지 출력되자마자 실행되는 이펙트 : useEffect //TODO: 공부용으로 놔둔 함수 지울것\n\n  /*\n  useEffect(()=> {\n          dispatch(\n              {\n                  type : LOG_IN,\n                  data:{\n                      nickname:'홍길동'\n                  },\n              }\n          );\n          dispatch(logoutAction);\n       }, []);\n       */\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, user ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"\\uB85C\\uADF8\\uC778 \\uD588\\uC2B5\\uB2C8\\uB2E4 \", user.nickname) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"\\uB85C\\uADF8\\uC544\\uC6C3 \\uD588\\uC2B5\\uB2C8\\uB2E4. \"), isLoggedIn && React.createElement(PostForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), mainPosts.map(function (c) {\n    return React.createElement(PostCard, {\n      key: c,\n      post: c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    });\n  }));\n};\n\nfunction generator() {\n  return _regeneratorRuntime.wrap(function generator$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/suminlee/PhpstormProjects/reactSNS/front/pages/index.js"],"names":["generator","React","useState","useEffect","Form","Input","Button","Card","Icon","Avatar","PostForm","PostCard","useDispatch","useSelector","LOG_IN","logoutAction","Home","state","post","mainPosts","dispatch","user","isLoggedIn","console","log","nickname","map","c"],"mappings":";;;;;yBA2DUA,S;;AA3DV,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,MAArB,EAA8BC,IAA9B,EAAoCC,IAApC,EAA0CC,MAA1C,QAAuD,MAAvD;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,MAAR,EAAgBC,YAAhB,QAAmC,kBAAnC;AAEA;;;;;;;;AAOA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAEf;AACA;AAHe,qBAIOH,WAAW,CAAC,UAAAI,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAJlB;AAAA,MAIPC,SAJO,gBAIPA,SAJO,EAMf;;;AACA,MAAMC,QAAQ,GAAGR,WAAW,EAA5B,CAPe,CAQf;;AARe,sBASYC,WAAW,CAAE,UAAAI,KAAK;AAAA,WAAIA,KAAK,CAACI,IAAV;AAAA,GAAP,CATvB;AAAA,MASRC,UATQ,iBASRA,UATQ;AAAA,MASID,IATJ,iBASIA,IATJ,EAS+C;;;AAC9DE,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAVe,CAYf;;AACA;;;;;;;;;;;;;;AAeA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,IAAI,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAAeA,IAAI,CAACI,QAApB,CAAH,GAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DADlD,EAIKH,UAAU,IAAI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJnB,EAOKH,SAAS,CAACO,GAAV,CAAc,UAACC,CAAD,EAAO;AAClB,WACI,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,CAAf;AAAkB,MAAA,IAAI,EAAEA,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGL,GAJE,CAPL,CADJ;AAeH,CA3CD;;AA6CA,SAAU3B,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA,eAAegB,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Form, Input, Button , Card, Icon, Avatar} from 'antd';\nimport PostForm from \"../components/PostForm\";\nimport PostCard from \"../components/PostCard\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {LOG_IN, logoutAction} from \"../reducers/user\";\n\n/*\n\n메인페이지\n스토어 스테이트 : 스토어에서 포스트 정보, 유저 정보, 유저 로그인 정보를 가져온다.\n스토어 스테이트에 상태에 따라 포스팅리스트 등을 가져와 뿌린다.\n\n*/\nconst Home = () => {\n\n    //리덕스 스테이트가 가지고 있는 데이터 소환하여 state로\n    // const { isLoggedIn } = useSelector(state => state.user.isLoggedIn); -> 잘게 쪼개\n    const { mainPosts } = useSelector(state => state.post);\n\n    //액션을 리덕스 훅스 문법으로 디스팻치하는 방법\n    const dispatch = useDispatch();\n    //스테이트 가져옴\n    const {isLoggedIn, user} = useSelector (state => state.user); //리덕스 스토어 (index.js)전체스테이트에서 유저를 가져와라\n    console.log(user);\n\n    //이 페이지 출력되자마자 실행되는 이펙트 : useEffect //TODO: 공부용으로 놔둔 함수 지울것\n    /*\n    useEffect(()=> {\n            dispatch(\n                {\n                    type : LOG_IN,\n                    data:{\n                        nickname:'홍길동'\n                    },\n                }\n            );\n            dispatch(logoutAction);\n\n        }, []);\n\n        */\n    return (\n        <div>\n            {user ? <div>로그인 했습니다 {user.nickname}</div> : <div>로그아웃 했습니다. </div>}\n\n            {/* 포스팅 입력 폼  */}\n            {isLoggedIn && <PostForm/>}\n\n            {/* 메인 포스트 매핑  */}\n            {mainPosts.map((c) => {\n                return(\n                    <PostCard key={c} post={c}/>\n                )\n          })}\n        </div>\n    );\n};\n\nfunction* generator() {\n    \n}\nexport default Home;"]},"metadata":{},"sourceType":"module"}