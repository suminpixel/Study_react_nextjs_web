{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/suminlee/PhpstormProjects/reactSNS/front/components/LoginForm.js\";\nimport React, { useCallback } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport Link from 'next/link';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useInput } from '../pages/signup'; // TODO: util 폴더로 옮기기\n\nimport { LOG_IN_REQUEST } from '../reducers/user';\n/*\n\n로그인 폼\n스토어 스테이트 : 0\n자체 스테이트 : id, pw, onChangeId, onChangePW\n콜백 함수 : 온서브밋폼\n디스패치 액션 : 로그인액션\n\n\n*/\n\nvar LoginForm = function LoginForm() {\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      id = _useInput2[0],\n      onChangeId = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      password = _useInput4[0],\n      onChangePassword = _useInput4[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      isLoggingIn = _useSelector.isLoggingIn;\n\n  var dispatch = useDispatch();\n  var onSubmitForm = useCallback(function (e) {\n    e.preventDefault();\n    dispatch({\n      type: LOG_IN_REQUEST,\n      data: {\n        id: id,\n        password: password\n      }\n    });\n  }, [id, password]);\n  return React.createElement(Form, {\n    onSubmit: onSubmitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"user-id\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"\\uC544\\uC774\\uB514\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Input, {\n    name: \"user-id\",\n    value: id,\n    onChange: onChangeId,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"user-password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Input, {\n    name: \"user-password\",\n    value: password,\n    onChange: onChangePassword,\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      margin: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"\\uB85C\\uADF8\\uC778\")));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/suminlee/PhpstormProjects/reactSNS/front/components/LoginForm.js"],"names":["React","useCallback","Button","Form","Input","Link","useDispatch","useSelector","useInput","LOG_IN_REQUEST","LoginForm","id","onChangeId","password","onChangePassword","state","user","isLoggingIn","dispatch","onSubmitForm","e","preventDefault","type","data","margin"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,iBAAzB,C,CAA4C;;AAC5C,SAASC,cAAT,QAA+B,kBAA/B;AACA;;;;;;;;;;;AAUA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA,kBACKF,QAAQ,CAAC,EAAD,CADb;AAAA;AAAA,MACbG,EADa;AAAA,MACTC,UADS;;AAAA,mBAEiBJ,QAAQ,CAAC,EAAD,CAFzB;AAAA;AAAA,MAEbK,QAFa;AAAA,MAEHC,gBAFG;;AAAA,qBAGIP,WAAW,CAAC,UAAAQ,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAHf;AAAA,MAGZC,WAHY,gBAGZA,WAHY;;AAIpB,MAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AAEA,MAAMa,YAAY,GAAGlB,WAAW,CAAC,UAACmB,CAAD,EAAO;AACpCA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEb,cADD;AAELc,MAAAA,IAAI,EAAE;AACFZ,QAAAA,EAAE,EAAFA,EADE;AACEE,QAAAA,QAAQ,EAARA;AADF;AAFD,KAAD,CAAR;AAMH,GAR+B,EAQ7B,CAACF,EAAD,EAAKE,QAAL,CAR6B,CAAhC;AAWA,SACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAIM,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,KAAK,EAAER,EAA7B;AAAiC,IAAA,QAAQ,EAAEC,UAA3C;AAAuD,IAAA,QAAQ,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAFJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAG,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,eAAZ;AAA4B,IAAA,KAAK,EAAEC,QAAnC;AAA6C,IAAA,QAAQ,EAAEC,gBAAvD;AAAyE,IAAA,IAAI,EAAC,UAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAPJ,EAYI;AAAK,IAAA,KAAK,EAAE;AAAEU,MAAAA,MAAM,EAAC;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAyC,IAAA,OAAO,EAAE,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CAZJ,CADJ;AAmBH,CApCD;;AAuCA,eAAed,SAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport Link from 'next/link';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useInput } from '../pages/signup'; // TODO: util 폴더로 옮기기\nimport { LOG_IN_REQUEST } from '../reducers/user';\n/*\n\n로그인 폼\n스토어 스테이트 : 0\n자체 스테이트 : id, pw, onChangeId, onChangePW\n콜백 함수 : 온서브밋폼\n디스패치 액션 : 로그인액션\n\n\n*/\nconst LoginForm = () => {\n    const [id, onChangeId] = useInput('');\n    const [password, onChangePassword] = useInput('');\n    const { isLoggingIn } = useSelector(state => state.user);\n    const dispatch = useDispatch();\n\n    const onSubmitForm = useCallback((e) => {\n        e.preventDefault();\n        dispatch({\n            type: LOG_IN_REQUEST,\n            data: {\n                id, password,\n            },\n        });\n    }, [id, password]);\n\n\n    return (\n        <Form onSubmit = {onSubmitForm}>\n            {/* 로그인 폼 */}\n            <div>\n                <label htmlFor = \"user-id\">아이디</label>\n                <br />\n                <Input name=\"user-id\" value={id} onChange={onChangeId} required />\n            </div>\n            <div>\n                <label htmlFor = \"user-password\">비밀번호</label>\n                <br />\n                <Input name=\"user-password\" value={password} onChange={onChangePassword} type=\"password\"  />\n            </div>\n            <div style={{ margin:10 }}>\n                <Button type=\"primary\" htmlType=\"submit\" loading={false}>로그인</Button>\n            </div>\n        </Form>\n\n    );\n};\n\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}