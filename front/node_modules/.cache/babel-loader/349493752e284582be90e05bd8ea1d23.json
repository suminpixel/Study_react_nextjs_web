{"ast":null,"code":"var _jsxFileName = \"/Users/suminlee/PhpstormProjects/reactSNS/front/pages/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Form, Input, Button, Card, Icon, Avatar } from 'antd';\nimport PostForm from \"../components/PostForm\";\nimport PostCard from \"../components/PostCard\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LOG_IN, logoutAction } from \"../reducers/user\"; //리덕스 스테이트가 가지고 있는 데이터 소환하여 state로\n//최대한 잘게 쪼개는것이 좋음 (리랜더링)\n\nvar _useSelector = useSelector(function (state) {\n  return state.user;\n}),\n    user = _useSelector.user; //const { isLoggedIn } = useSelector(state => state.user.isLoggedIn); -> 잘게 쪼개\n\n\nvar _useSelector2 = useSelector(function (state) {\n  return state.post;\n}),\n    mainPosts = _useSelector2.mainPosts;\n\nvar Home = function Home() {\n  //액션을 리덕스 훅스 문법으로 디스팻치하는 방법\n  var dispatch = useDispatch(); //스테이트 가져옴\n\n  var _useSelector3 = useSelector(function (state) {\n    return state.user;\n  }),\n      isLoggedIn = _useSelector3.isLoggedIn,\n      user = _useSelector3.user; //리덕스 스토어 (index.js)전체스테이트에서 유저를 가져와라\n\n\n  console.log(user);\n  useEffect(function () {\n    dispatch({\n      type: LOG_IN,\n      data: {\n        nickname: '홍길동'\n      }\n    });\n    dispatch(logoutAction);\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, user ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"\\uB85C\\uADF8\\uC778 \\uD588\\uC2B5\\uB2C8\\uB2E4 \", user.nickname) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"\\uB85C\\uADF8\\uC544\\uC6C3 \\uD588\\uC2B5\\uB2C8\\uB2E4. \"), isLoggedIn && React.createElement(PostForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), mainPosts.map(function (c) {\n    return React.createElement(PostCard, {\n      key: c,\n      post: c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/suminlee/PhpstormProjects/reactSNS/front/pages/index.js"],"names":["React","useState","useEffect","Form","Input","Button","Card","Icon","Avatar","PostForm","PostCard","useDispatch","useSelector","LOG_IN","logoutAction","state","user","post","mainPosts","Home","dispatch","isLoggedIn","console","log","type","data","nickname","map","c"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,MAArB,EAA8BC,IAA9B,EAAoCC,IAApC,EAA0CC,MAA1C,QAAuD,MAAvD;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,MAAR,EAAgBC,YAAhB,QAAmC,kBAAnC,C,CAEA;AACA;;mBACiBF,WAAW,CAAC,UAAAG,KAAK;AAAA,SAAIA,KAAK,CAACC,IAAV;AAAA,CAAN,C;IAApBA,I,gBAAAA,I,EACR;;;oBACsBJ,WAAW,CAAC,UAAAG,KAAK;AAAA,SAAIA,KAAK,CAACE,IAAV;AAAA,CAAN,C;IAAzBC,S,iBAAAA,S;;AAER,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACf;AACA,MAAMC,QAAQ,GAAGT,WAAW,EAA5B,CAFe,CAGf;;AAHe,sBAIYC,WAAW,CAAE,UAAAG,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAP,CAJvB;AAAA,MAIRK,UAJQ,iBAIRA,UAJQ;AAAA,MAIIL,IAJJ,iBAIIA,IAJJ,EAI+C;;;AAC9DM,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACAd,EAAAA,SAAS,CAAC,YAAK;AACPkB,IAAAA,QAAQ,CACJ;AACII,MAAAA,IAAI,EAAGX,MADX;AAEIY,MAAAA,IAAI,EAAC;AACDC,QAAAA,QAAQ,EAAC;AADR;AAFT,KADI,CAAR;AAQAN,IAAAA,QAAQ,CAACN,YAAD,CAAR;AAEH,GAXI,EAWF,EAXE,CAAT;AAYA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,IAAI,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAAeA,IAAI,CAACU,QAApB,CAAH,GAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DADlD,EAGKL,UAAU,IAAI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHnB,EAKKH,SAAS,CAACS,GAAV,CAAc,UAACC,CAAD,EAAO;AAClB,WACI,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,CAAf;AAAkB,MAAA,IAAI,EAAEA,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGL,GAJE,CALL,CADJ;AAaH,CA/BD;;AAiCA,eAAeT,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Form, Input, Button , Card, Icon, Avatar} from 'antd';\nimport PostForm from \"../components/PostForm\";\nimport PostCard from \"../components/PostCard\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {LOG_IN, logoutAction} from \"../reducers/user\";\n\n//리덕스 스테이트가 가지고 있는 데이터 소환하여 state로\n//최대한 잘게 쪼개는것이 좋음 (리랜더링)\nconst { user } = useSelector(state => state.user);\n//const { isLoggedIn } = useSelector(state => state.user.isLoggedIn); -> 잘게 쪼개\nconst { mainPosts } = useSelector(state => state.post);\n\nconst Home = () => {\n    //액션을 리덕스 훅스 문법으로 디스팻치하는 방법\n    const dispatch = useDispatch();\n    //스테이트 가져옴\n    const {isLoggedIn, user} = useSelector (state => state.user); //리덕스 스토어 (index.js)전체스테이트에서 유저를 가져와라\n    console.log(user);\n    useEffect(()=> {\n            dispatch(\n                {\n                    type : LOG_IN,\n                    data:{\n                        nickname:'홍길동'\n                    },\n                }\n            );\n            dispatch(logoutAction);\n\n        }, []);\n    return (\n        <div>\n            {user ? <div>로그인 했습니다 {user.nickname}</div> : <div>로그아웃 했습니다. </div>}\n            {/* 포스팅 입력 폼  */}\n            {isLoggedIn && <PostForm/>}\n            {/* 메인 포스트 매핑  */}\n            {mainPosts.map((c) => {\n                return(\n                    <PostCard key={c} post={c}/>\n                )\n          })}\n        </div>\n    );\n};\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}